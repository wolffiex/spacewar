digraph G {
  compound=true;

  subgraph clusterLatency {
    helo -> sync;
    sync -> sync;
    sync -> latency;
  }

  subgraph clusterGame {
    rocks -> localInput;
    renderState->rocks [weight=0];
    rocks->remote;

    start -> gameInfo;
    keys -> localInput;
    localInput->gameState;
    localInput->remote;
    remote->remoteInput;
    remoteInput->gameState;

    gameInfo->localInput;
    gameState->renderState;
    renderState->end;
    
    requestAnimationFrame->renderTimeout;
    requestAnimationFrame->render;
    renderTimeout->renderState;
    renderState->render;
    label = "Game";

    remote [shape=hexagon];
    gameInfo [label="game info"];
    localInput [label="local input"];
    remoteInput [label="remote input"];
    renderTimeout [label="timer", shape=invhouse];
    requestAnimationFrame [shape=invhouse];
    render [shape=invhouse];
    gameState [label="game state"];
    renderState [label="render state"];
  }

  sockets -> helo;
  latency -> start [label="buffer 2"];
  end -> log [ltail="clusterGame" label="mergeAll"];
  //a -> b [label="hello", style=dashed];
  //a -> c [label="world"];
  //c -> d; b -> c; d -> a;
  //b [shape=Mdiamond, label="this is b"];
  //c [shape=polygon, sides=5, peripheries=3];
  //d [style=bold];
}

