var Rx = require('Rx');

module.exports = function(url, onopen) {
  var ws = new WebSocket(url);

  if (onopen) ws.onopen = onopen;

  var socket = Rx.Observable.create(function(observer) {
    if (socket.isClosed) {
      // Immediately complete the stream if it's already closed
      // TODO: Schedule this appropriately
      observer.onCompleted();
      return;
    }

    ws.onmessage = function(event) {
      observer.onNext(JSON.parse(event.data));
    }

    ws.onerror = function() {
      socket.isClosed = true;
      observer.onError('Socket error');
    }
    
    ws.onclose = function() {
      socket.isClosed = true;
      observer.onCompleted();
    }

    return function () {
      socket.isClosed = true;
      ws.close();
    };
  }).share(); // Keep one, single connection alive

  socket.isClosed = false;

  socket.onNext = function(message) {
    ws.send(JSON.stringify(message));
  };

  socket.onCompleted = socket.onError = function() {
    socket.isClosed = true;
    ws.close();
  };

  return socket;
};

